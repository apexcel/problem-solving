const scan = parseInt(require('fs').readFileSync('/dev/stdin').toString(), 10);

// 메모리 42868kb 시간 372ms
let fibs = [0, 1, 1];
for (let i = 3; i <= scan + 1; i++) {
    fibs[i] = fibs[i-2] + fibs[i-1];
    fibs[i] %= 15746;
}

console.log(fibs[scan + 1]);

// 메모리 8932kb 시간 200ms
let c = []
c[0] = 1, c[1] = 1;
for (let i = 2; i <= scan; i++) {
    c[2] = c[1] + c[0];
    if (c[2] >= 15746) c[2] -= 15746;
    c[0] = c[1];
    c[1] = c[2];
}
console.log(c[1])

/*
    각 N마다 만들 수 있는 이진수의 개수를 만들어 보면

    f(3)의 경우 001, 100, 111인데 이는 f(1)인 1에서 길이가 2인 00을 붙이거나
    길이가 1인 1을 붙여 길이 3인 수들을 만드는 것과
    f(2)인 00, 11에서 00과 1을 붙여 길이가 3인 수들을 만들고 중복을 제거하는 것과 같다.

    f(4)의 경우 f(3)에서 001, 100, 111에서 1을 붙여 만드는 수들과
    f(2)의 00, 11 에서 00을 붙이거나 1을 붙여 길이 4를 만든 수들에 중복을 제거한 것과 같다.

    f(1) = 1, f(2) = 2, f(3) = 3, f(4) = 5 ...
    피보나치 수열을 이루는 것을 알 수 있다.

    따라서 f(N) = f(N-2) + f(N-1)인데 값 기하급수적으로 커지므로
    매 값을 15746 나머지로 저장해야한다.
*/